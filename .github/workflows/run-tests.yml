name: "Unit tests"

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l -e -o pipefail {0}

    env:
      PERL_CACHE: ~/perl5 # Perlbrew and CPAN modules installed here, cached
      NPG_LIB: ~/perl5npg # NPG modules installed here, not cached
      WSI_NPG_GITHUB_URL: https://github.com/wtsi-npg
      WSI_NPG_BUILD_BRANCH: ${{ github.base_ref}}
      WSI_NPG_GITHUB_REPO_OWNER: ${{ github.repository_owner }}

    strategy:
      matrix:
        perl: ["5.26.3", "5.34.1"]

    services:
       mysql:
         image: mysql:8.0
         ports:
           - 3306:3306
         env:
           MYSQL_ALLOW_EMPTY_PASSWORD: yes
           MYSQL_ROOT_PASSWORD: null
           MYSQL_DATABASE: npgt
         options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=5 

    steps:
      - uses: actions/checkout@v4
    
      - name: Change dbhost to 127.0.0.1
        run: |
            sed -i s/localhost/127.0.0.1/ ${GITHUB_WORKSPACE}/data/config.ini

      - name: set timezone
        run: |
            sudo timedatectl set-timezone Europe/London 

      - name: "Install OS dependencies"
        run: |
          sudo apt-get update
          # https://github.com/actions/runner-images/issues/2139
          sudo apt-get remove -y nginx libgd3
          sudo apt-get install -y libgd-dev uuid-dev libgd-text-perl libdevel-patchperl-perl \
            libmodule-runtime-perl

      - name: "Cache Perl"
        id: cache-perl
        uses: actions/cache@v4
        with:
          path: ${{ env.PERL_CACHE }}
          key: ${{ runner.os }}-${{ matrix.perl }}-perl

      - name: "Install Perlbrew"
        if: steps.cache-perl.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.perlbrew.pl -o perlbrew.sh
          sha256sum -c .github/workflows/perlbrew.sha256
          export PERLBREW_ROOT=${{ env.PERL_CACHE }}
          sh perlbrew.sh
            
          source ${{ env.PERL_CACHE }}/etc/bashrc
          perlbrew available
          perlbrew install --notest perl-${{ matrix.perl }}
          perlbrew use perl-${{ matrix.perl }}
          perlbrew install-cpanm

      - name: "Initialize Perlbrew"
        run: |
          echo "source ${{ env.PERL_CACHE }}/etc/bashrc" >> "$HOME/.bash_profile"

      - name: "Install Perl dependencies"
        run: |
          cpanm --local-lib=${{ env.PERL_CACHE }} local::lib
          eval $(perl -I ${{ env.PERL_CACHE }}/lib/perl5/ -Mlocal::lib="$NPG_LIB")
          eval $(perl -I ${{ env.PERL_CACHE }}/lib/perl5/ -Mlocal::lib)
          
          cpanm --quiet --notest Module::Build
          
          ./scripts/install_wsi_dependencies.sh "$NPG_LIB" \
             perl-dnap-utilities \
             ml_warehouse

          cpanm --installdeps --notest .

      - name: "Log install failure"
        if: ${{ failure() }}
        run: |
          find ~/.cpanm/work -cmin -1 -name '*.log' -exec tail -n20  {} \;

      - name: "Archive CPAN logs on failure"
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: cpan_log
          path: ~/.cpanm/work/*/build.log
          retention-days: 5

      - name: "Run tests"
        run: |
          eval $(perl -I ${{ env.PERL_CACHE }}/lib/perl5/ -Mlocal::lib)
          eval $(perl -I ${{ env.PERL_CACHE }}/lib/perl5/ -Mlocal::lib="$NPG_LIB")
          
          export TEST_AUTHOR=1
          perl Build.PL
          ./Build test --verbose
          ./Build install

      - name: "Build distribution"
        run: |
          eval $(perl -I ${{ env.PERL_CACHE }}/lib/perl5/ -Mlocal::lib)
          eval $(perl -I ${{ env.PERL_CACHE }}/lib/perl5/ -Mlocal::lib="$NPG_LIB")
          export TEST_AUTHOR=1
          
          ./Build dist
          export DIST_FILE=$(ls npg-tracking-*.tar.gz)
          export MD5_FILE=$DIST_FILE.md5
          md5sum $DIST_FILE > $MD5_FILE
          export SHA256_FILE=$DIST_FILE.sha256
          shasum -a 256 $DIST_FILE > $SHA256_FILE
